<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Note Book</title><link>https://eightzero.site/notebook/</link><description>Recent content in Introduction on Note Book</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://eightzero.site/notebook/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://eightzero.site/notebook/docs/golang/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AE%9E%E7%8E%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eightzero.site/notebook/docs/golang/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AE%9E%E7%8E%B0/</guid><description>设计模式1 #</description></item><item><title/><link>https://eightzero.site/notebook/docs/k8s/dashboard/dashborad%E5%AE%89%E8%A3%85/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eightzero.site/notebook/docs/k8s/dashboard/dashborad%E5%AE%89%E8%A3%85/</guid><description>NodePort部署 # wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml vim recommended.yaml kind: Service apiVersion: v1 metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboard spec: type: NodePort //添加类型为NodePort ports: - port: 443 targetPort: 8443 nodePort: 31010 //映射到宿主机的端口为31010 selector: k8s-app: kubernetes-dashboard //执行yaml文件 $ kubectl apply -f recommended.yaml //查看Pod是否运行 $ kubectl get pod -n kubernetes-dashboard //确保该yaml文件提供的pod都正常运行 $ kubectl get svc -n kubernetes-dashboard 访问 # 创建dashboard的管理用户
$ kubectl create serviceaccount dashboard-admin -n kube-system 绑定用户为集群的管理员
$ kubectl create clusterrolebinding dashboard-cluster-rolebinding --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin 获取刚刚创建的用户Token</description></item><item><title/><link>https://eightzero.site/notebook/docs/rust/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AE%9E%E7%8E%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eightzero.site/notebook/docs/rust/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AE%9E%E7%8E%B0/</guid><description>设计模式1 #</description></item><item><title/><link>https://eightzero.site/notebook/docs/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/%E6%9D%83%E9%99%90%E8%AE%BE%E8%AE%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eightzero.site/notebook/docs/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/%E6%9D%83%E9%99%90%E8%AE%BE%E8%AE%A1/</guid><description>服务类型权限&amp;mdash;和机器标签绑定
api权限
权限最小原则</description></item><item><title/><link>https://eightzero.site/notebook/docs/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97/openyurt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eightzero.site/notebook/docs/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97/openyurt/</guid><description>服务类型权限&amp;mdash;和机器标签绑定
api权限
权限最小原则</description></item><item><title/><link>https://eightzero.site/notebook/docs/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97/WasmEdge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eightzero.site/notebook/docs/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97/WasmEdge/</guid><description>服务类型权限&amp;mdash;和机器标签绑定
api权限
权限最小原则</description></item><item><title/><link>https://eightzero.site/notebook/docs/%E9%97%AE%E9%A2%98%E9%9B%86/issue/issue-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eightzero.site/notebook/docs/%E9%97%AE%E9%A2%98%E9%9B%86/issue/issue-1/</guid><description>问题1：Metrics Server部署失败
Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 14m default-scheduler Successfully assigned kube-system/metrics-server-7898cc74cb-jdwps to master Normal Pulling 14m kubelet Pulling image &amp;#34;k8s.gcr.io/metrics-server/metrics-server:v0.5.2&amp;#34; Normal Pulled 13m kubelet Successfully pulled image &amp;#34;k8s.gcr.io/metrics-server/metrics-server:v0.5.2&amp;#34; in 16.557781304s Normal Created 13m kubelet Created container metrics-server Normal Started 13m kubelet Started container metrics-server Warning Unhealthy 3m54s (x57 over 13m) kubelet Readiness probe failed: HTTP probe failed with statuscode: 500 修改components.yaml, 添加--kubelet-insecure-tls</description></item></channel></rss>